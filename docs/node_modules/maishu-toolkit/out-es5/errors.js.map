{"version":3,"sources":["../out/errors.js"],"names":["Errors","argumentName","error","Error","name","fieldName","msg","expectedType","errors"],"mappings":";;;;;;;;;;;;;IAAaA,M;;;;;;;;;iCACIC,Y,EAAc;AACvB,UAAIC,KAAK,GAAG,IAAIC,KAAJ,oBAAsBF,YAAtB,8BAAZ;AACA,UAAIG,IAAI,GAAG,cAAX;AACAF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACA,aAAOF,KAAP;AACH;;;uCACkBG,S,EAAW;AAC1B,UAAIC,GAAG,iBAAUD,SAAV,wCAAP;AACA,UAAIH,KAAK,GAAG,IAAIC,KAAJ,CAAUG,GAAV,CAAZ;AACA,UAAIF,IAAI,GAAG,oBAAX;AACAF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACA,aAAOF,KAAP;AACH;;;sCACiBG,S,EAAWJ,Y,EAAc;AACvC,UAAIK,GAAG,iBAAUD,SAAV,uBAAgCJ,YAAhC,oBAAP;AACA,UAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUG,GAAV,CAAZ;AACA,UAAIF,IAAI,GAAG,mBAAX;AACAF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACA,aAAOF,KAAP;AACH;;;0CACqBD,Y,EAAcM,Y,EAAc;AAC9C,UAAID,GAAG,sBAAeL,YAAf,2CAA4DM,YAA5D,MAAP;AACA,UAAIL,KAAK,GAAG,IAAIC,KAAJ,CAAUG,GAAV,CAAZ;AACA,UAAIF,IAAI,GAAG,uBAAX;AACAF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACA,aAAOF,KAAP;AACH;;;;;;;AAEE,IAAIM,MAAM,GAAG,IAAIR,MAAJ,EAAb","sourcesContent":["export class Errors {\r\n    argumentNull(argumentName) {\r\n        let error = new Error(`Argument ${argumentName} cannt be null or emtpy.`);\r\n        let name = \"argumentNull\";\r\n        error.name = name;\r\n        return error;\r\n    }\r\n    routeDataFieldNull(fieldName) {\r\n        let msg = `The ${fieldName} field of route data cannt be null.`;\r\n        let error = new Error(msg);\r\n        let name = \"routeDataFieldNull\";\r\n        error.name = name;\r\n        return error;\r\n    }\r\n    argumentFieldNull(fieldName, argumentName) {\r\n        let msg = `The ${fieldName} field of ${argumentName} cannt be null.`;\r\n        let error = new Error(msg);\r\n        let name = \"argumentFieldNull\";\r\n        error.name = name;\r\n        return error;\r\n    }\r\n    argumentTypeIncorrect(argumentName, expectedType) {\r\n        let msg = `Argument ${argumentName} type error, expected type is ${expectedType}.`;\r\n        let error = new Error(msg);\r\n        let name = \"argumentTypeIncorrect\";\r\n        error.name = name;\r\n        return error;\r\n    }\r\n}\r\nexport let errors = new Errors();\r\n"],"file":"errors.js"}