{"version":3,"sources":["../out/data.js"],"names":["errors","Object","assign","baseErrors","dataSourceCanntInsert","Error","dataSourceCanntDelete","dataSourceCanntUpdate","primaryKeyNull","key","msg","queryResultTypeError","DataSource","args","inserting","Callback","inserted","deleting","deleted","updating","updated","selecting","selected","error","primaryKeys","item","insert","delete","update","select","index","canInsert","argumentNull","fire","sender","dataItem","executeInsert","then","data","catch","exc","processError","canDelete","checkPrimaryKeys","executeDelete","canUpdate","executeUpdate","theItem","otherItem","length","pk","indexOf","selectArguments","executeSelect","dataItems","totalRowCount","Array","isArray","undefined","selectResult","method","handled","DataSourceSelectArguments","startRowIndex","maximumRows"],"mappings":"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","sourcesContent":["import { errors as baseErrors } from \"./errors\";\r\nimport { Callback } from \"./callback\";\r\nlet errors = Object.assign(baseErrors, {\r\n    dataSourceCanntInsert() {\r\n        return new Error(\"DataSource can not insert.\");\r\n    },\r\n    dataSourceCanntDelete() {\r\n        return new Error(\"DataSource can not delete.\");\r\n    },\r\n    dataSourceCanntUpdate() {\r\n        return new Error(\"DataSource can not update.\");\r\n    },\r\n    primaryKeyNull(key) {\r\n        let msg = `Primary key named '${key}' value is null.`;\r\n        return new Error(msg);\r\n    },\r\n    queryResultTypeError() {\r\n        let msg = `Query result type error.`;\r\n        return new Error(msg);\r\n    }\r\n});\r\nexport class DataSource {\r\n    constructor(args) {\r\n        this.inserting = new Callback(); //callbacks1<DataSource<T>, T, number>();\r\n        this.inserted = new Callback();\r\n        this.deleting = new Callback(); //callbacks<DataSource<T>, T>();\r\n        this.deleted = new Callback(); //callbacks<DataSource<T>, T>();\r\n        this.updating = new Callback();\r\n        this.updated = new Callback();\r\n        this.selecting = new Callback();\r\n        this.selected = new Callback(); //callbacks<DataSource<T>, DataSourceSelectResult<T>>();\r\n        this.error = new Callback(); //callbacks<this, DataSourceError>();\r\n        this.args = args;\r\n        this.primaryKeys = args.primaryKeys || [];\r\n    }\r\n    ; //callbacks<DataSource<T>, DataSourceSelectArguments>();\r\n    get canDelete() {\r\n        return this.args.delete != null && this.primaryKeys.length > 0;\r\n    }\r\n    get canInsert() {\r\n        return this.args.insert != null && this.primaryKeys.length > 0;\r\n    }\r\n    get canUpdate() {\r\n        return this.args.update != null && this.primaryKeys.length > 0;\r\n    }\r\n    executeInsert(item, args) {\r\n        return this.args.insert(item, args);\r\n    }\r\n    executeDelete(item, args) {\r\n        return this.args.delete(item, args);\r\n    }\r\n    executeUpdate(item, args) {\r\n        return this.args.update(item, args);\r\n    }\r\n    executeSelect(args) {\r\n        args = args || {};\r\n        return this.args.select(args);\r\n    }\r\n    insert(item, args, index) {\r\n        if (!this.canInsert)\r\n            throw errors.dataSourceCanntInsert();\r\n        if (!item)\r\n            throw errors.argumentNull(\"item\");\r\n        if (typeof args == 'number') {\r\n            index = args;\r\n            args = null;\r\n        }\r\n        this.inserting.fire({ sender: this, dataItem: item, index });\r\n        return this.executeInsert(item, args).then((data) => {\r\n            Object.assign(item, data);\r\n            this.inserted.fire({ sender: this, dataItem: item, index });\r\n            return data;\r\n        }).catch(exc => {\r\n            this.processError(exc, 'insert');\r\n            throw exc;\r\n        });\r\n    }\r\n    delete(item, args) {\r\n        if (!this.canDelete)\r\n            throw errors.dataSourceCanntDelete();\r\n        if (!item)\r\n            throw errors.argumentNull(\"item\");\r\n        this.checkPrimaryKeys(item);\r\n        this.deleting.fire({ sender: this, dataItem: item });\r\n        return this.executeDelete(item, args).then((data) => {\r\n            this.deleted.fire({ sender: this, dataItem: item });\r\n            return data;\r\n        }).catch(exc => {\r\n            this.processError(exc, 'delete');\r\n            throw exc;\r\n        });\r\n    }\r\n    update(item, args) {\r\n        if (!this.canUpdate)\r\n            throw errors.dataSourceCanntUpdate();\r\n        if (!item)\r\n            throw errors.argumentNull(\"item\");\r\n        this.checkPrimaryKeys(item);\r\n        this.updating.fire({ sender: this, dataItem: item });\r\n        return this.executeUpdate(item, args).then((data) => {\r\n            Object.assign(item, data);\r\n            this.updated.fire({ sender: this, dataItem: item });\r\n            return data;\r\n        }).catch((exc) => {\r\n            this.processError(exc, 'update');\r\n            throw exc;\r\n        });\r\n    }\r\n    isSameItem(theItem, otherItem) {\r\n        if (theItem == null)\r\n            throw errors.argumentNull('theItem');\r\n        if (otherItem == null)\r\n            throw errors.argumentNull('otherItem');\r\n        if (this.primaryKeys.length == 0)\r\n            return theItem == otherItem;\r\n        this.checkPrimaryKeys(theItem);\r\n        this.checkPrimaryKeys(otherItem);\r\n        for (let pk of this.primaryKeys) {\r\n            if (theItem[pk] != otherItem[pk])\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    checkPrimaryKeys(item) {\r\n        for (let key in item) {\r\n            if (item[key] == null && this.primaryKeys.indexOf(key) >= 0)\r\n                throw errors.primaryKeyNull(key);\r\n        }\r\n    }\r\n    select(args) {\r\n        args = args || {};\r\n        // fireCallback(this.selecting, this, args);\r\n        this.selecting.fire({ sender: this, selectArguments: args });\r\n        return this.executeSelect(args).then((data) => {\r\n            let dataItems;\r\n            let totalRowCount;\r\n            if (Array.isArray(data)) {\r\n                dataItems = data;\r\n                totalRowCount = data.length;\r\n            }\r\n            else if (data.dataItems !== undefined && data.totalRowCount !== undefined) {\r\n                dataItems = data.dataItems;\r\n                totalRowCount = data.totalRowCount;\r\n            }\r\n            else {\r\n                throw errors.queryResultTypeError();\r\n            }\r\n            this.selected.fire({ sender: this, selectResult: { totalRowCount, dataItems }, selectArguments: args });\r\n            return { totalRowCount, dataItems };\r\n        }).catch(exc => {\r\n            this.processError(exc, 'select');\r\n            throw exc;\r\n        });\r\n    }\r\n    processError(exc, method) {\r\n        exc.method = method;\r\n        this.error.fire({ sender: this, error: exc });\r\n        if (!exc.handled)\r\n            throw exc;\r\n    }\r\n}\r\nexport class DataSourceSelectArguments {\r\n    constructor() {\r\n        this.startRowIndex = 0;\r\n        this.maximumRows = 2147483647;\r\n    }\r\n}\r\n"],"file":"data.js"}